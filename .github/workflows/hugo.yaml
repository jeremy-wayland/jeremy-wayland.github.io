name: Deploy Hugo site to Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.135.0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb
          sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Sass (embedded)
        run: |
          if command -v snap >/dev/null 2>&1; then
            sudo snap install dart-sass || true
          fi
          # Fallback (and preferred) path: install embedded Sass via npm for Hugo css.Sass
          npm i -g sass-embedded

      - name: Setup Pages
        if: github.event_name != 'pull_request'
        id: pages
        uses: actions/configure-pages@v4

      - name: Determine base URL
        id: baseurl
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "value=/" >> "$GITHUB_OUTPUT"
          else
            echo "value=${{ steps.pages.outputs.base_url }}/" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install Node.js dependencies
        run: |
          if [ -f package.json ]; then
            npm install
          fi

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo --gc --minify --baseURL "${{ steps.baseurl.outputs.value }}"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4 # Ensures no v3 usage
        with:
          name: hugo-site
          path: ./public

      - name: Upload artifact (Pages)
        if: github.event_name != 'pull_request'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    if: github.event_name != 'pull_request'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
